!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
BULKNETWORK_H_	BulkNetwork.h	2;"	d
BULKPOOL_H_	BulkPool.h	2;"	d
BULKSESSION_H_	BulkSession.cpp	2;"	d	file:
BULKSESSION_H_	BulkSession.h	2;"	d
BulkFile	BulkFile.cpp	/^BulkFile::BulkFile() $/;"	f	class:BulkFile	signature:()
BulkFile	BulkFile.cpp	/^BulkFile::BulkFile(string dirname)$/;"	f	class:BulkFile	signature:(string dirname)
BulkFile	BulkFile.h	/^		BulkFile();$/;"	p	class:BulkFile	access:public	signature:()
BulkFile	BulkFile.h	/^		BulkFile(string dirname);$/;"	p	class:BulkFile	access:public	signature:(string dirname)
BulkFile	BulkFile.h	/^class BulkFile$/;"	c
BulkFile::BulkFile	BulkFile.cpp	/^BulkFile::BulkFile() $/;"	f	class:BulkFile	signature:()
BulkFile::BulkFile	BulkFile.cpp	/^BulkFile::BulkFile(string dirname)$/;"	f	class:BulkFile	signature:(string dirname)
BulkFile::BulkFile	BulkFile.h	/^		BulkFile();$/;"	p	class:BulkFile	access:public	signature:()
BulkFile::BulkFile	BulkFile.h	/^		BulkFile(string dirname);$/;"	p	class:BulkFile	access:public	signature:(string dirname)
BulkFile::_ItoS	BulkFile.cpp	/^string BulkFile::_ItoS(int source)$/;"	f	class:BulkFile	signature:(int source)
BulkFile::_ItoS	BulkFile.h	/^		string _ItoS(int source);$/;"	p	class:BulkFile	access:private	signature:(int source)
BulkFile::_arr	BulkFile.h	/^		map<string, bool> _arr; \/\/Â≠òÊîæÊñá‰ª∂‰ø°ÊÅØÁöÑÊï∞ÁªÑ$/;"	m	class:BulkFile	access:private
BulkFile::_defaultDirname	BulkFile.h	/^		string _defaultDirname; \/\/ÈªòËÆ§Êñá‰ª∂Â§π$/;"	m	class:BulkFile	access:private
BulkFile::_fileExisted	BulkFile.cpp	/^bool BulkFile::_fileExisted(string filePath)$/;"	f	class:BulkFile	signature:(string filePath)
BulkFile::_fileExisted	BulkFile.h	/^		bool _fileExisted(string filePath);$/;"	p	class:BulkFile	access:private	signature:(string filePath)
BulkFile::_fileHandle	BulkFile.h	/^		FILE* _fileHandle; \/\/Êñá‰ª∂Âè•ÊüÑ$/;"	m	class:BulkFile	access:private
BulkFile::_fileMkdir	BulkFile.cpp	/^bool BulkFile::_fileMkdir(string dirname)$/;"	f	class:BulkFile	signature:(string dirname)
BulkFile::_fileMkdir	BulkFile.h	/^		bool _fileMkdir(string dirname);$/;"	p	class:BulkFile	access:private	signature:(string dirname)
BulkFile::_getFileFullPath	BulkFile.cpp	/^string BulkFile::_getFileFullPath(pathInfo* fileNameInfo)$/;"	f	class:BulkFile	signature:(pathInfo* fileNameInfo)
BulkFile::_getFileFullPath	BulkFile.h	/^		string _getFileFullPath(pathInfo* fileNameInfo);$/;"	p	class:BulkFile	access:private	signature:(pathInfo* fileNameInfo)
BulkFile::_pathinfo	BulkFile.cpp	/^pathInfo* BulkFile:: _pathinfo(string sDirname, string sBasename, string sExtension)$/;"	f	class:BulkFile	signature:(string sDirname, string sBasename, string sExtension)
BulkFile::_pathinfo	BulkFile.h	/^		pathInfo* _pathinfo(string sDirname, string sBasename, string sExtension = ".dat");$/;"	p	class:BulkFile	access:private	signature:(string sDirname, string sBasename, string sExtension = ”)
BulkFile::_removeForbiddenChar	BulkFile.cpp	/^string BulkFile::_removeForbiddenChar(string* s)$/;"	f	class:BulkFile	signature:(string* s)
BulkFile::_removeForbiddenChar	BulkFile.h	/^		string _removeForbiddenChar(string* s);$/;"	p	class:BulkFile	access:private	signature:(string* s)
BulkFile::_sFilePath	BulkFile.h	/^		string _sFilePath; \/\/ÂΩìÂâçÊñá‰ª∂ÂÖ®Ë∑ØÂæÑ$/;"	m	class:BulkFile	access:private
BulkFile::_sTempDirname	BulkFile.h	/^		string _sTempDirname; \/\/‰∏¥Êó∂Êñá‰ª∂Â§π$/;"	m	class:BulkFile	access:private
BulkFile::_sTempPath	BulkFile.h	/^		string _sTempPath; \/\/‰∏¥Êó∂Ë∑ØÂæÑ$/;"	m	class:BulkFile	access:private
BulkFile::_setFileName	BulkFile.cpp	/^void BulkFile::_setFileName(pathInfo* fileNameInfo, string sFileName)$/;"	f	class:BulkFile	signature:(pathInfo* fileNameInfo, string sFileName)
BulkFile::_setFileName	BulkFile.h	/^		void _setFileName(pathInfo* fileNameInfo, string sFileName);$/;"	p	class:BulkFile	access:private	signature:(pathInfo* fileNameInfo, string sFileName)
BulkFile::addFile	BulkFile.cpp	/^void BulkFile::addFile(string sBasename, string sDirname)$/;"	f	class:BulkFile	signature:(string sBasename, string sDirname)
BulkFile::addFile	BulkFile.h	/^		void addFile(string sBasename, string sDirname = NULL);$/;"	p	class:BulkFile	access:public	signature:(string sBasename, string sDirname = NULL)
BulkFile::getFilePath	BulkFile.cpp	/^string BulkFile::getFilePath() const$/;"	f	class:BulkFile	signature:() const
BulkFile::getFilePath	BulkFile.h	/^		string getFilePath() const;$/;"	p	class:BulkFile	access:public	signature:() const
BulkFile::getTempDirname	BulkFile.cpp	/^string BulkFile::getTempDirname() const$/;"	f	class:BulkFile	signature:() const
BulkFile::getTempDirname	BulkFile.h	/^		string getTempDirname() const;$/;"	p	class:BulkFile	access:public	signature:() const
BulkFile::getlines	BulkFile.cpp	/^void BulkFile::getlines(char** buff, int nSize, string filePath)$/;"	f	class:BulkFile	signature:(char** buff, int nSize, string filePath)
BulkFile::getlines	BulkFile.h	/^		void getlines(char** buff, int nSize, string filePath);$/;"	p	class:BulkFile	access:public	signature:(char** buff, int nSize, string filePath)
BulkFile::init	BulkFile.cpp	/^void BulkFile::init()$/;"	f	class:BulkFile	signature:()
BulkFile::init	BulkFile.h	/^		void init();$/;"	p	class:BulkFile	access:public	signature:()
BulkFile::setTempDirname	BulkFile.cpp	/^BulkFile& BulkFile::setTempDirname(string tempDir)$/;"	f	class:BulkFile	signature:(string tempDir)
BulkFile::setTempDirname	BulkFile.h	/^		BulkFile& setTempDirname(string tempDir);$/;"	p	class:BulkFile	access:public	signature:(string tempDir)
BulkGraphEdge	BulkGraphEdge.cpp	/^BulkGraphEdge::BulkGraphEdge(int v1, int v2, double weight, double capacity)$/;"	f	class:BulkGraphEdge	signature:(int v1, int v2, double weight, double capacity)
BulkGraphEdge	BulkGraphEdge.h	/^		BulkGraphEdge():_v1(-1), _v2(-1), _weight(0.0), _capacity(0.0){}$/;"	f	class:BulkGraphEdge	access:public	signature:()
BulkGraphEdge	BulkGraphEdge.h	/^		BulkGraphEdge(int v1, int v2, double weight = 0.0, double capacity = 0.0);$/;"	p	class:BulkGraphEdge	access:public	signature:(int v1, int v2, double weight = 0.0, double capacity = 0.0)
BulkGraphEdge	BulkGraphEdge.h	/^class BulkGraphEdge$/;"	c
BulkGraphEdge::BulkGraphEdge	BulkGraphEdge.cpp	/^BulkGraphEdge::BulkGraphEdge(int v1, int v2, double weight, double capacity)$/;"	f	class:BulkGraphEdge	signature:(int v1, int v2, double weight, double capacity)
BulkGraphEdge::BulkGraphEdge	BulkGraphEdge.h	/^		BulkGraphEdge():_v1(-1), _v2(-1), _weight(0.0), _capacity(0.0){}$/;"	f	class:BulkGraphEdge	access:public	signature:()
BulkGraphEdge::BulkGraphEdge	BulkGraphEdge.h	/^		BulkGraphEdge(int v1, int v2, double weight = 0.0, double capacity = 0.0);$/;"	p	class:BulkGraphEdge	access:public	signature:(int v1, int v2, double weight = 0.0, double capacity = 0.0)
BulkGraphEdge::_capacity	BulkGraphEdge.h	/^		double _capacity;  \/\/ÈìæË∑ØÂ∏¶ÂÆΩ$/;"	m	class:BulkGraphEdge	access:private
BulkGraphEdge::_v1	BulkGraphEdge.h	/^		int _v1;		   \/\/node id of the origin$/;"	m	class:BulkGraphEdge	access:private
BulkGraphEdge::_v2	BulkGraphEdge.h	/^		int _v2;		   \/\/node id of the end$/;"	m	class:BulkGraphEdge	access:private
BulkGraphEdge::_weight	BulkGraphEdge.h	/^		double _weight;	   \/\/ÊùÉÂÄº$/;"	m	class:BulkGraphEdge	access:private
BulkGraphEdge::getCapacity	BulkGraphEdge.cpp	/^double BulkGraphEdge::getCapacity() const$/;"	f	class:BulkGraphEdge	signature:() const
BulkGraphEdge::getCapacity	BulkGraphEdge.h	/^		double getCapacity() const;$/;"	p	class:BulkGraphEdge	access:public	signature:() const
BulkGraphEdge::getGraphEdgeSink	BulkGraphEdge.cpp	/^int BulkGraphEdge::getGraphEdgeSink() const$/;"	f	class:BulkGraphEdge	signature:() const
BulkGraphEdge::getGraphEdgeSink	BulkGraphEdge.h	/^		int getGraphEdgeSink() const;$/;"	p	class:BulkGraphEdge	access:public	signature:() const
BulkGraphEdge::getGraphEdgeSource	BulkGraphEdge.cpp	/^int BulkGraphEdge::getGraphEdgeSource() const$/;"	f	class:BulkGraphEdge	signature:() const
BulkGraphEdge::getGraphEdgeSource	BulkGraphEdge.h	/^		int getGraphEdgeSource() const;$/;"	p	class:BulkGraphEdge	access:public	signature:() const
BulkGraphEdge::getWeight	BulkGraphEdge.cpp	/^double BulkGraphEdge::getWeight() const$/;"	f	class:BulkGraphEdge	signature:() const
BulkGraphEdge::getWeight	BulkGraphEdge.h	/^		double getWeight() const;$/;"	p	class:BulkGraphEdge	access:public	signature:() const
BulkGraphEdge::operator ==	BulkGraphEdge.cpp	/^bool BulkGraphEdge::operator == (const BulkGraphEdge& edge)$/;"	f	class:BulkGraphEdge	signature:(const BulkGraphEdge& edge)
BulkGraphEdge::operator ==	BulkGraphEdge.h	/^		bool operator == (const BulkGraphEdge& edge);$/;"	p	class:BulkGraphEdge	access:public	signature:(const BulkGraphEdge& edge)
BulkGraphEdge::setCapacity	BulkGraphEdge.cpp	/^BulkGraphEdge& BulkGraphEdge::setCapacity(double capacity)$/;"	f	class:BulkGraphEdge	signature:(double capacity)
BulkGraphEdge::setCapacity	BulkGraphEdge.h	/^		BulkGraphEdge& setCapacity(double capacity);$/;"	p	class:BulkGraphEdge	access:public	signature:(double capacity)
BulkGraphEdge::setWeight	BulkGraphEdge.cpp	/^BulkGraphEdge& BulkGraphEdge::setWeight(double weight)$/;"	f	class:BulkGraphEdge	signature:(double weight)
BulkGraphEdge::setWeight	BulkGraphEdge.h	/^		BulkGraphEdge& setWeight(double weight);$/;"	p	class:BulkGraphEdge	access:public	signature:(double weight)
BulkGraphEdge::~BulkGraphEdge	BulkGraphEdge.h	/^		 ~BulkGraphEdge(){}$/;"	f	class:BulkGraphEdge	access:public	signature:()
BulkGraphNode	BulkGraphNode.cpp	/^BulkGraphNode::BulkGraphNode(int _id):id(_id), numHeadQueue(0), numTailQueue(0), isTerminal(false)$/;"	f	class:BulkGraphNode	signature:(int _id)
BulkGraphNode	BulkGraphNode.h	/^		BulkGraphNode():id(-1), numHeadQueue(0), numTailQueue(0), isTerminal(false) $/;"	f	class:BulkGraphNode	access:public	signature:()
BulkGraphNode	BulkGraphNode.h	/^		BulkGraphNode(int _id);$/;"	p	class:BulkGraphNode	access:public	signature:(int _id)
BulkGraphNode	BulkGraphNode.h	/^class BulkGraphNode$/;"	c
BulkGraphNode::BulkGraphNode	BulkGraphNode.cpp	/^BulkGraphNode::BulkGraphNode(int _id):id(_id), numHeadQueue(0), numTailQueue(0), isTerminal(false)$/;"	f	class:BulkGraphNode	signature:(int _id)
BulkGraphNode::BulkGraphNode	BulkGraphNode.h	/^		BulkGraphNode():id(-1), numHeadQueue(0), numTailQueue(0), isTerminal(false) $/;"	f	class:BulkGraphNode	access:public	signature:()
BulkGraphNode::BulkGraphNode	BulkGraphNode.h	/^		BulkGraphNode(int _id);$/;"	p	class:BulkGraphNode	access:public	signature:(int _id)
BulkGraphNode::Print	BulkGraphNode.cpp	/^int BulkGraphNode::Print()$/;"	f	class:BulkGraphNode	signature:()
BulkGraphNode::Print	BulkGraphNode.h	/^		int Print();$/;"	p	class:BulkGraphNode	access:public	signature:()
BulkGraphNode::addBulkEdge	BulkGraphNode.cpp	/^bool BulkGraphNode::addBulkEdge(BulkGraphEdge* edge)$/;"	f	class:BulkGraphNode	signature:(BulkGraphEdge* edge)
BulkGraphNode::addBulkEdge	BulkGraphNode.h	/^		bool addBulkEdge(BulkGraphEdge* edge);$/;"	p	class:BulkGraphNode	access:public	signature:(BulkGraphEdge* edge)
BulkGraphNode::getBulkEdge	BulkGraphNode.cpp	/^BulkGraphEdge* BulkGraphNode::getBulkEdge(BulkGraphEdge* edge) const$/;"	f	class:BulkGraphNode	signature:(BulkGraphEdge* edge) const
BulkGraphNode::getBulkEdge	BulkGraphNode.h	/^		BulkGraphEdge* getBulkEdge(BulkGraphEdge* edge) const;$/;"	p	class:BulkGraphNode	access:public	signature:(BulkGraphEdge* edge) const
BulkGraphNode::getHeadEdge	BulkGraphNode.cpp	/^slist<BulkGraphEdge>* BulkGraphNode::getHeadEdge() const$/;"	f	class:BulkGraphNode	signature:() const
BulkGraphNode::getHeadEdge	BulkGraphNode.h	/^		slist<BulkGraphEdge>* getHeadEdge() const;$/;"	p	class:BulkGraphNode	access:public	signature:() const
BulkGraphNode::getNodeId	BulkGraphNode.cpp	/^int BulkGraphNode::getNodeId() const$/;"	f	class:BulkGraphNode	signature:() const
BulkGraphNode::getNodeId	BulkGraphNode.h	/^		int getNodeId() const;$/;"	p	class:BulkGraphNode	access:public	signature:() const
BulkGraphNode::getNumHeadQueue	BulkGraphNode.cpp	/^int BulkGraphNode::getNumHeadQueue() const$/;"	f	class:BulkGraphNode	signature:() const
BulkGraphNode::getNumHeadQueue	BulkGraphNode.h	/^		int getNumHeadQueue() const;$/;"	p	class:BulkGraphNode	access:public	signature:() const
BulkGraphNode::getNumTailQueue	BulkGraphNode.cpp	/^int BulkGraphNode::getNumTailQueue() const$/;"	f	class:BulkGraphNode	signature:() const
BulkGraphNode::getNumTailQueue	BulkGraphNode.h	/^		int getNumTailQueue() const;$/;"	p	class:BulkGraphNode	access:public	signature:() const
BulkGraphNode::getTailEdge	BulkGraphNode.cpp	/^slist<BulkGraphEdge>* BulkGraphNode::getTailEdge() const$/;"	f	class:BulkGraphNode	signature:() const
BulkGraphNode::getTailEdge	BulkGraphNode.h	/^		slist<BulkGraphEdge>* getTailEdge() const;$/;"	p	class:BulkGraphNode	access:public	signature:() const
BulkGraphNode::headEdge	BulkGraphNode.h	/^		slist<BulkGraphEdge>* headEdge;$/;"	m	class:BulkGraphNode	access:private
BulkGraphNode::id	BulkGraphNode.h	/^		int id;				    \/\/id of the end node of the edge$/;"	m	class:BulkGraphNode	access:private
BulkGraphNode::isTerminal	BulkGraphNode.h	/^		bool isTerminal ; \/\/check the node is Terminal$/;"	m	class:BulkGraphNode	access:private
BulkGraphNode::numHeadQueue	BulkGraphNode.h	/^		int numHeadQueue;       \/\/number of the head queues$/;"	m	class:BulkGraphNode	access:private
BulkGraphNode::numTailQueue	BulkGraphNode.h	/^		int numTailQueue;       \/\/number of the tail queues$/;"	m	class:BulkGraphNode	access:private
BulkGraphNode::operator =	BulkGraphNode.cpp	/^BulkGraphNode& BulkGraphNode::operator=(const BulkGraphNode &node)$/;"	f	class:BulkGraphNode	signature:(const BulkGraphNode &node)
BulkGraphNode::operator =	BulkGraphNode.h	/^		BulkGraphNode& operator = (const BulkGraphNode &node);$/;"	p	class:BulkGraphNode	access:public	signature:(const BulkGraphNode &node)
BulkGraphNode::operator ==	BulkGraphNode.cpp	/^bool BulkGraphNode::operator == (const BulkGraphNode& node)$/;"	f	class:BulkGraphNode	signature:(const BulkGraphNode& node)
BulkGraphNode::operator ==	BulkGraphNode.h	/^		bool operator == (const BulkGraphNode& node);$/;"	p	class:BulkGraphNode	access:public	signature:(const BulkGraphNode& node)
BulkGraphNode::removeBulkEdge	BulkGraphNode.cpp	/^bool BulkGraphNode::removeBulkEdge(BulkGraphEdge* edge)$/;"	f	class:BulkGraphNode	signature:(BulkGraphEdge* edge)
BulkGraphNode::removeBulkEdge	BulkGraphNode.h	/^		bool removeBulkEdge(BulkGraphEdge* edge);$/;"	p	class:BulkGraphNode	access:public	signature:(BulkGraphEdge* edge)
BulkGraphNode::setId	BulkGraphNode.cpp	/^BulkGraphNode& BulkGraphNode::setId(int id)$/;"	f	class:BulkGraphNode	signature:(int id)
BulkGraphNode::setId	BulkGraphNode.h	/^		BulkGraphNode& setId(int id);$/;"	p	class:BulkGraphNode	access:public	signature:(int id)
BulkGraphNode::tailEdge	BulkGraphNode.h	/^		slist<BulkGraphEdge>* tailEdge;$/;"	m	class:BulkGraphNode	access:private
BulkGraphNode::~BulkGraphNode	BulkGraphNode.h	/^		virtual ~BulkGraphNode()$/;"	f	class:BulkGraphNode	access:public	signature:()
BulkLink	BulkLink.cpp	/^BulkLink::BulkLink(int from, int to, bool isTerminal):$/;"	f	class:BulkLink	signature:(int from, int to, bool isTerminal)
BulkLink	BulkLink.cpp	/^BulkLink::BulkLink(int from, int to, int weight, int capacity,bool isTerminal = false):BulkGraphEdge(from, to, weight, capacity), _numPacketsHead(0),_numPacketsTail(0)$/;"	f	class:BulkLink	signature:(int from, int to, int weight, int capacity,bool isTerminal = false)
BulkLink	BulkLink.h	/^		BulkLink():BulkGraphEdge()$/;"	f	class:BulkLink	access:public	signature:()
BulkLink	BulkLink.h	/^		BulkLink(int from, int to, bool isTerminal = false);$/;"	p	class:BulkLink	access:public	signature:(int from, int to, bool isTerminal = false)
BulkLink	BulkLink.h	/^		BulkLink(int from, int to, int weight, int capacity, bool isTerminal = false);$/;"	p	class:BulkLink	access:public	signature:(int from, int to, int weight, int capacity, bool isTerminal = false)
BulkLink	BulkLink.h	/^class BulkLink:BulkGraphEdge$/;"	c	inherits:BulkGraphEdge
BulkLink::BulkLink	BulkLink.cpp	/^BulkLink::BulkLink(int from, int to, bool isTerminal):$/;"	f	class:BulkLink	signature:(int from, int to, bool isTerminal)
BulkLink::BulkLink	BulkLink.cpp	/^BulkLink::BulkLink(int from, int to, int weight, int capacity,bool isTerminal = false):BulkGraphEdge(from, to, weight, capacity), _numPacketsHead(0),_numPacketsTail(0)$/;"	f	class:BulkLink	signature:(int from, int to, int weight, int capacity,bool isTerminal = false)
BulkLink::BulkLink	BulkLink.h	/^		BulkLink():BulkGraphEdge()$/;"	f	class:BulkLink	access:public	signature:()
BulkLink::BulkLink	BulkLink.h	/^		BulkLink(int from, int to, bool isTerminal = false);$/;"	p	class:BulkLink	access:public	signature:(int from, int to, bool isTerminal = false)
BulkLink::BulkLink	BulkLink.h	/^		BulkLink(int from, int to, int weight, int capacity, bool isTerminal = false);$/;"	p	class:BulkLink	access:public	signature:(int from, int to, int weight, int capacity, bool isTerminal = false)
BulkLink::_headQueue	BulkLink.h	/^		queue<BulkPackets>* _headQueue;$/;"	m	class:BulkLink	access:private
BulkLink::_isToTerminal	BulkLink.h	/^		bool _isToTerminal; \/\/_toÊòØÂê¶ÈÄöÂêëÁªàÊ≠¢ÁÇπ$/;"	m	class:BulkLink	access:private
BulkLink::_numPacketsHead	BulkLink.h	/^		int _numPacketsHead; \/\/edgeËæπÂ§¥ÁöÑÈòüÂàó$/;"	m	class:BulkLink	access:private
BulkLink::_numPacketsTail	BulkLink.h	/^		int _numPacketsTail; \/\/edgeËæπÂ∞æÁöÑÈòüÂàó$/;"	m	class:BulkLink	access:private
BulkLink::_tailQueue	BulkLink.h	/^		queue<BulkPackets>* _tailQueue;$/;"	m	class:BulkLink	access:private
BulkLink::addNumPacketsHead	BulkLink.cpp	/^bool BulkLink::addNumPacketsHead(bool isAdd, int numPackets)$/;"	f	class:BulkLink	signature:(bool isAdd, int numPackets)
BulkLink::addNumPacketsHead	BulkLink.h	/^		bool addNumPacketsHead(bool isAdd, int numPackets = 1);$/;"	p	class:BulkLink	access:public	signature:(bool isAdd, int numPackets = 1)
BulkLink::addNumPacketsTail	BulkLink.cpp	/^bool BulkLink::addNumPacketsTail(bool isAdd, int numPackets)$/;"	f	class:BulkLink	signature:(bool isAdd, int numPackets)
BulkLink::addNumPacketsTail	BulkLink.h	/^		bool addNumPacketsTail(bool isAdd, int numPackets = 1);$/;"	p	class:BulkLink	access:public	signature:(bool isAdd, int numPackets = 1)
BulkNetwork	BulkNetwork.h	/^		BulkNetwork():_nSource(0), _nSink(0){}$/;"	f	class:BulkNetwork	access:public	signature:()
BulkNetwork	BulkNetwork.h	/^		BulkNetwork(int nSour, int nSink, Graph& graph = NULL):_nSource(0), _nSink(0)$/;"	f	class:BulkNetwork	access:public	signature:(int nSour, int nSink, Graph& graph = NULL)
BulkNetwork	BulkNetwork.h	/^class BulkNetwork$/;"	c
BulkNetwork::BulkNetwork	BulkNetwork.h	/^		BulkNetwork():_nSource(0), _nSink(0){}$/;"	f	class:BulkNetwork	access:public	signature:()
BulkNetwork::BulkNetwork	BulkNetwork.h	/^		BulkNetwork(int nSour, int nSink, Graph& graph = NULL):_nSource(0), _nSink(0)$/;"	f	class:BulkNetwork	access:public	signature:(int nSour, int nSink, Graph& graph = NULL)
BulkNetwork::_lSinkList	BulkNetwork.h	/^		slist<GraphNode>* _lSinkList;$/;"	m	class:BulkNetwork	access:private
BulkNetwork::_lSourceList	BulkNetwork.h	/^		slist<GraphNode>* _lSourceList;$/;"	m	class:BulkNetwork	access:private
BulkNetwork::_nSink	BulkNetwork.h	/^		int _nSink;   \/\/ÊúâÂá†‰∏™SinkÊµÅÂá∫ÁÇπ$/;"	m	class:BulkNetwork	access:private
BulkNetwork::_nSource	BulkNetwork.h	/^		int _nSource; \/\/ÊúâÂá†‰∏™SourceÊµÅÂÖ•ÁÇπ$/;"	m	class:BulkNetwork	access:private
BulkNetwork::_topology	BulkNetwork.h	/^		Graph* _topology;$/;"	m	class:BulkNetwork	access:private
BulkNetwork::getSinkNodeById	BulkNetwork.cpp	/^slist<GraphNode>* BulkNetwork::getSinkNodeById(int id) const$/;"	f	class:BulkNetwork	signature:(int id) const
BulkNetwork::getSinkNodeById	BulkNetwork.h	/^		slist<GraphNode>* getSinkNodeById(int id) const;$/;"	p	class:BulkNetwork	access:public	signature:(int id) const
BulkNetwork::getSourceNodeById	BulkNetwork.cpp	/^slist<GraphNode>* BulkNetwork::getSourceNodeById(int id) const$/;"	f	class:BulkNetwork	signature:(int id) const
BulkNetwork::getSourceNodeById	BulkNetwork.h	/^		slist<GraphNode>* getSourceNodeById(int id) const;$/;"	p	class:BulkNetwork	access:public	signature:(int id) const
BulkNetwork::setSinkNodeById	BulkNetwork.cpp	/^BulkNetwork& BulkNetwork::setSinkNodeById(int id)$/;"	f	class:BulkNetwork	signature:(int id)
BulkNetwork::setSinkNodeById	BulkNetwork.h	/^		BulkNetwork& setSinkNodeById(int id);$/;"	p	class:BulkNetwork	access:public	signature:(int id)
BulkNetwork::setSourceNodeById	BulkNetwork.cpp	/^BulkNetwork& BulkNetwork::setSourceNodeById(int id)$/;"	f	class:BulkNetwork	signature:(int id)
BulkNetwork::setSourceNodeById	BulkNetwork.h	/^		BulkNetwork& setSourceNodeById(int id);$/;"	p	class:BulkNetwork	access:public	signature:(int id)
BulkNetwork::~BulkNetwork	BulkNetwork.h	/^		virtual ~BulkNetwork();$/;"	p	class:BulkNetwork	access:public	signature:()
BulkPacket	BulkPacket.cpp	/^BulkPacket::BulkPacket(double size, unit type)$/;"	f	class:BulkPacket	signature:(double size, unit type)
BulkPacket	BulkPacket.h	/^		BulkPacket():_size(1), _type(Kb){}$/;"	f	class:BulkPacket	access:public	signature:()
BulkPacket	BulkPacket.h	/^		BulkPacket(double size, unit type);$/;"	p	class:BulkPacket	access:public	signature:(double size, unit type)
BulkPacket	BulkPacket.h	/^class BulkPacket$/;"	c
BulkPacket::BulkPacket	BulkPacket.cpp	/^BulkPacket::BulkPacket(double size, unit type)$/;"	f	class:BulkPacket	signature:(double size, unit type)
BulkPacket::BulkPacket	BulkPacket.h	/^		BulkPacket():_size(1), _type(Kb){}$/;"	f	class:BulkPacket	access:public	signature:()
BulkPacket::BulkPacket	BulkPacket.h	/^		BulkPacket(double size, unit type);$/;"	p	class:BulkPacket	access:public	signature:(double size, unit type)
BulkPacket::ConvertToType	BulkPacket.cpp	/^bool BulkPacket::ConvertToType(int degree, bool isLarge)$/;"	f	class:BulkPacket	signature:(int degree, bool isLarge)
BulkPacket::ConvertToType	BulkPacket.h	/^		bool ConvertToType(int degree, bool isLarge = true);$/;"	p	class:BulkPacket	access:public	signature:(int degree, bool isLarge = true)
BulkPacket::_size	BulkPacket.h	/^		double _size;$/;"	m	class:BulkPacket	access:private
BulkPacket::_type	BulkPacket.h	/^		unit _type;$/;"	m	class:BulkPacket	access:private
BulkPacket::getPacketInfo	BulkPacket.cpp	/^string BulkPacket::getPacketInfo()$/;"	f	class:BulkPacket	signature:()
BulkPacket::getPacketInfo	BulkPacket.h	/^		string getPacketInfo();$/;"	p	class:BulkPacket	access:public	signature:()
BulkPacket::getPacketSize	BulkPacket.cpp	/^double BulkPacket::getPacketSize() const$/;"	f	class:BulkPacket	signature:() const
BulkPacket::getPacketSize	BulkPacket.h	/^		double getPacketSize() const;$/;"	p	class:BulkPacket	access:public	signature:() const
BulkPacket::getPacketUnit	BulkPacket.cpp	/^string BulkPacket::getPacketUnit()$/;"	f	class:BulkPacket	signature:()
BulkPacket::getPacketUnit	BulkPacket.h	/^		string getPacketUnit();$/;"	p	class:BulkPacket	access:public	signature:()
BulkPacket::setPacketSize	BulkPacket.cpp	/^BulkPacket&BulkPacket::setPacketSize(double size)$/;"	f	class:BulkPacket	signature:(double size)
BulkPacket::setPacketSize	BulkPacket.h	/^		BulkPacket& setPacketSize(double size);$/;"	p	class:BulkPacket	access:public	signature:(double size)
BulkPacket::setPacketType	BulkPacket.cpp	/^BulkPacket&BulkPacket::setPacketType(unit type)$/;"	f	class:BulkPacket	signature:(unit type)
BulkPacket::setPacketType	BulkPacket.h	/^		BulkPacket& setPacketType(unit type);$/;"	p	class:BulkPacket	access:public	signature:(unit type)
BulkPacket::~BulkPacket	BulkPacket.cpp	/^BulkPacket::~BulkPacket()$/;"	f	class:BulkPacket	signature:()
BulkPacket::~BulkPacket	BulkPacket.h	/^		~BulkPacket();$/;"	p	class:BulkPacket	access:public	signature:()
BulkPackets	BulkPackets.cpp	/^BulkPackets::BulkPackets(double number, BulkPacket* packet):_sourceNode(new GraphNode()), _sinkNode(new GraphNode())$/;"	f	class:BulkPackets	signature:(double number, BulkPacket* packet)
BulkPackets	BulkPackets.cpp	/^BulkPackets::BulkPackets(double number, GraphNode* source, GraphNode* sink, BulkPacket* packet)$/;"	f	class:BulkPackets	signature:(double number, GraphNode* source, GraphNode* sink, BulkPacket* packet)
BulkPackets	BulkPackets.h	/^		BulkPackets():_sourceNode(new GraphNode()), _sinkNode(new GraphNode()), _transferPacketsNum(1) {$/;"	f	class:BulkPackets	access:public	signature:()
BulkPackets	BulkPackets.h	/^		BulkPackets(double number, BulkPacket* packet = NULL);$/;"	p	class:BulkPackets	access:public	signature:(double number, BulkPacket* packet = NULL)
BulkPackets	BulkPackets.h	/^		BulkPackets(double number, GraphNode* source, GraphNode* sink, BulkPacket* packet = NULL);$/;"	p	class:BulkPackets	access:public	signature:(double number, GraphNode* source, GraphNode* sink, BulkPacket* packet = NULL)
BulkPackets	BulkPackets.h	/^class BulkPackets$/;"	c
BulkPackets::BulkPackets	BulkPackets.cpp	/^BulkPackets::BulkPackets(double number, BulkPacket* packet):_sourceNode(new GraphNode()), _sinkNode(new GraphNode())$/;"	f	class:BulkPackets	signature:(double number, BulkPacket* packet)
BulkPackets::BulkPackets	BulkPackets.cpp	/^BulkPackets::BulkPackets(double number, GraphNode* source, GraphNode* sink, BulkPacket* packet)$/;"	f	class:BulkPackets	signature:(double number, GraphNode* source, GraphNode* sink, BulkPacket* packet)
BulkPackets::BulkPackets	BulkPackets.h	/^		BulkPackets():_sourceNode(new GraphNode()), _sinkNode(new GraphNode()), _transferPacketsNum(1) {$/;"	f	class:BulkPackets	access:public	signature:()
BulkPackets::BulkPackets	BulkPackets.h	/^		BulkPackets(double number, BulkPacket* packet = NULL);$/;"	p	class:BulkPackets	access:public	signature:(double number, BulkPacket* packet = NULL)
BulkPackets::BulkPackets	BulkPackets.h	/^		BulkPackets(double number, GraphNode* source, GraphNode* sink, BulkPacket* packet = NULL);$/;"	p	class:BulkPackets	access:public	signature:(double number, GraphNode* source, GraphNode* sink, BulkPacket* packet = NULL)
BulkPackets::_model	BulkPackets.h	/^		BulkPacket* _model;$/;"	m	class:BulkPackets	access:private
BulkPackets::_sinkNode	BulkPackets.h	/^		GraphNode* _sinkNode;$/;"	m	class:BulkPackets	access:private
BulkPackets::_sourceNode	BulkPackets.h	/^		GraphNode* _sourceNode;$/;"	m	class:BulkPackets	access:private
BulkPackets::_transferPacketsNum	BulkPackets.h	/^		double _transferPacketsNum;$/;"	m	class:BulkPackets	access:private
BulkPackets::getBulkPacketsInfo	BulkPackets.h	/^		string getBulkPacketsInfo();$/;"	p	class:BulkPackets	access:public	signature:()
BulkPackets::getBulkPacketsSize	BulkPackets.cpp	/^double BulkPackets::getBulkPacketsSize()$/;"	f	class:BulkPackets	signature:()
BulkPackets::getBulkPacketsSize	BulkPackets.h	/^		double getBulkPacketsSize();$/;"	p	class:BulkPackets	access:public	signature:()
BulkPackets::operator =	BulkPackets.cpp	/^BulkPackets& BulkPackets::operator=(const BulkPackets& bulkPackets)$/;"	f	class:BulkPackets	signature:(const BulkPackets& bulkPackets)
BulkPackets::operator =	BulkPackets.h	/^		BulkPackets& operator=(BulkPackets& bulkPackets);$/;"	p	class:BulkPackets	access:public	signature:(BulkPackets& bulkPackets)
BulkPackets::setSinkNode	BulkPackets.cpp	/^BulkPackets& BulkPackets::setSinkNode(GraphNode* sink)$/;"	f	class:BulkPackets	signature:(GraphNode* sink)
BulkPackets::setSinkNode	BulkPackets.h	/^		BulkPackets& setSinkNode(GraphNode* sink);$/;"	p	class:BulkPackets	access:public	signature:(GraphNode* sink)
BulkPackets::setSourceNode	BulkPackets.cpp	/^BulkPackets& BulkPackets::setSourceNode(GraphNode* source)$/;"	f	class:BulkPackets	signature:(GraphNode* source)
BulkPackets::setSourceNode	BulkPackets.h	/^		BulkPackets& setSourceNode(GraphNode* source);$/;"	p	class:BulkPackets	access:public	signature:(GraphNode* source)
BulkPackets::setTransferPacketsNum	BulkPackets.cpp	/^BulkPackets& BulkPackets::setTransferPacketsNum(double number)$/;"	f	class:BulkPackets	signature:(double number)
BulkPackets::setTransferPacketsNum	BulkPackets.h	/^		BulkPackets& setTransferPacketsNum(double number);$/;"	p	class:BulkPackets	access:public	signature:(double number)
BulkPackets::~BulkPackets	BulkPackets.cpp	/^BulkPackets::~BulkPackets()$/;"	f	class:BulkPackets	signature:()
BulkPackets::~BulkPackets	BulkPackets.h	/^		~BulkPackets();$/;"	p	class:BulkPackets	access:public	signature:()
BulkPool	BulkPool.cpp	/^BulkPool::BulkPool():_packets(new BulkPackets())$/;"	f	class:BulkPool	signature:()
BulkPool	BulkPool.cpp	/^BulkPool::BulkPool(BulkPackets* packetsModel)$/;"	f	class:BulkPool	signature:(BulkPackets* packetsModel)
BulkPool	BulkPool.h	/^		BulkPool();$/;"	p	class:BulkPool	access:public	signature:()
BulkPool	BulkPool.h	/^		BulkPool(BulkPackets* packetsModel);$/;"	p	class:BulkPool	access:public	signature:(BulkPackets* packetsModel)
BulkPool	BulkPool.h	/^class BulkPool$/;"	c
BulkPool::BulkPool	BulkPool.cpp	/^BulkPool::BulkPool():_packets(new BulkPackets())$/;"	f	class:BulkPool	signature:()
BulkPool::BulkPool	BulkPool.cpp	/^BulkPool::BulkPool(BulkPackets* packetsModel)$/;"	f	class:BulkPool	signature:(BulkPackets* packetsModel)
BulkPool::BulkPool	BulkPool.h	/^		BulkPool();$/;"	p	class:BulkPool	access:public	signature:()
BulkPool::BulkPool	BulkPool.h	/^		BulkPool(BulkPackets* packetsModel);$/;"	p	class:BulkPool	access:public	signature:(BulkPackets* packetsModel)
BulkPool::INITSIZE	BulkPool.h	/^		static int INITSIZE = 100;$/;"	m	class:BulkPool	access:private
BulkPool::MAXSIZE	BulkPool.h	/^		static int MAXSIZE = 1000;$/;"	m	class:BulkPool	access:private
BulkPool::_packets	BulkPool.h	/^		BulkPackets* _packets;$/;"	m	class:BulkPool	access:private
BulkPool::_pool	BulkPool.h	/^		slist<BulkPackets>* _pool;$/;"	m	class:BulkPool	access:private
BulkPool::destroy	BulkPool.cpp	/^void BulkPool::destroy()$/;"	f	class:BulkPool	signature:()
BulkPool::destroy	BulkPool.h	/^		void destroy();$/;"	p	class:BulkPool	access:public	signature:()
BulkPool::getPacketsFromPool	BulkPool.h	/^		BulkPackets* getPacketsFromPool();$/;"	p	class:BulkPool	access:public	signature:()
BulkPool::init	BulkPool.cpp	/^void BulkPool::init()$/;"	f	class:BulkPool	signature:()
BulkPool::init	BulkPool.h	/^		void init();$/;"	p	class:BulkPool	access:public	signature:()
BulkPool::placePacketsToPool	BulkPool.h	/^		void placePacketsToPool(BulkPackets* packets);$/;"	p	class:BulkPool	access:public	signature:(BulkPackets* packets)
BulkSession	BulkSession.h	/^		BulkSession():_sourceNode(NULL), _sinkNode(NULL) {$/;"	f	class:BulkSession	access:public	signature:()
BulkSession	BulkSession.h	/^		BulkSession(GraphNode* source, GraphNode* sink) {$/;"	f	class:BulkSession	access:public	signature:(GraphNode* source, GraphNode* sink)
BulkSession	BulkSession.h	/^class BulkSession$/;"	c
BulkSession::BulkSession	BulkSession.h	/^		BulkSession():_sourceNode(NULL), _sinkNode(NULL) {$/;"	f	class:BulkSession	access:public	signature:()
BulkSession::BulkSession	BulkSession.h	/^		BulkSession(GraphNode* source, GraphNode* sink) {$/;"	f	class:BulkSession	access:public	signature:(GraphNode* source, GraphNode* sink)
BulkSession::_sinkNode	BulkSession.h	/^		GraphNode* _sinkNode;$/;"	m	class:BulkSession	access:private
BulkSession::_sourceNode	BulkSession.h	/^		GraphNode* _sourceNode;$/;"	m	class:BulkSession	access:private
Byte	BulkPacket.h	/^	Byte = 1,$/;"	e	enum:unit
ConvertToType	BulkPacket.cpp	/^bool BulkPacket::ConvertToType(int degree, bool isLarge)$/;"	f	class:BulkPacket	signature:(int degree, bool isLarge)
ConvertToType	BulkPacket.h	/^		bool ConvertToType(int degree, bool isLarge = true);$/;"	p	class:BulkPacket	access:public	signature:(int degree, bool isLarge = true)
Gb	BulkPacket.h	/^	Gb = 4$/;"	e	enum:unit
Graph	Graph.cpp	/^Graph::Graph(int _n):n(_n)$/;"	f	class:Graph	signature:(int _n)
Graph	Graph.h	/^		Graph():n(0), e(0){aList = NULL;}$/;"	f	class:Graph	access:public	signature:()
Graph	Graph.h	/^		Graph(int _n);$/;"	p	class:Graph	access:public	signature:(int _n)
Graph	Graph.h	/^class Graph  $/;"	c
Graph::Graph	Graph.cpp	/^Graph::Graph(int _n):n(_n)$/;"	f	class:Graph	signature:(int _n)
Graph::Graph	Graph.h	/^		Graph():n(0), e(0){aList = NULL;}$/;"	f	class:Graph	access:public	signature:()
Graph::Graph	Graph.h	/^		Graph(int _n);$/;"	p	class:Graph	access:public	signature:(int _n)
Graph::_dfsVisit	Graph.cpp	/^void Graph::_dfsVisit(int uSource, int* visited, int vSink)$/;"	f	class:Graph	signature:(int uSource, int* visited, int vSink)
Graph::_dfsVisit	Graph.h	/^		void _dfsVisit(int uSource, int* visited, int vSink); \/\/DFS algorithm$/;"	p	class:Graph	access:private	signature:(int uSource, int* visited, int vSink)
Graph::_extractInfo	Graph.cpp	/^size_t Graph::_extractInfo(char* message, Graph* graph)$/;"	f	class:Graph	signature:(char* message, Graph* graph)
Graph::_extractInfo	Graph.h	/^		static size_t _extractInfo(char* message, Graph* graph);$/;"	p	class:Graph	access:private	signature:(char* message, Graph* graph)
Graph::aList	Graph.h	/^		BulkGraphNode* aList; \/\/ adjacency lists$/;"	m	class:Graph	access:private
Graph::capacity	Graph.cpp	/^double Graph::capacity(int v1, int v2) const$/;"	f	class:Graph	signature:(int v1, int v2) const
Graph::capacity	Graph.h	/^		double capacity(int v1, int v2) const; \/\/return capcity of edge (v1, v2)$/;"	p	class:Graph	access:public	signature:(int v1, int v2) const
Graph::clearEdges	Graph.cpp	/^void Graph::clearEdges()$/;"	f	class:Graph	signature:()
Graph::clearEdges	Graph.h	/^		void clearEdges();$/;"	p	class:Graph	access:public	signature:()
Graph::connected	Graph.cpp	/^bool Graph::connected(int v1, int v2)$/;"	f	class:Graph	signature:(int v1, int v2)
Graph::connected	Graph.h	/^		bool connected(int v1, int v2);$/;"	p	class:Graph	access:public	signature:(int v1, int v2)
Graph::e	Graph.h	/^		int e;	\/\/ number of edges, one edge counts two times, since later one edge has two opposite direction flow$/;"	m	class:Graph	access:private
Graph::getEdges	Graph.cpp	/^int Graph::getEdges() const$/;"	f	class:Graph	signature:() const
Graph::getEdges	Graph.h	/^		int getEdges() const;    \/\/return the number of directed edges$/;"	p	class:Graph	access:public	signature:() const
Graph::getList	Graph.cpp	/^BulkGraphNode* Graph::getList()$/;"	f	class:Graph	signature:()
Graph::getList	Graph.h	/^		BulkGraphNode* getList();$/;"	p	class:Graph	access:public	signature:()
Graph::getVertices	Graph.cpp	/^int Graph::getVertices() const$/;"	f	class:Graph	signature:() const
Graph::getVertices	Graph.h	/^		int getVertices() const; \/\/return the number of nodes$/;"	p	class:Graph	access:public	signature:() const
Graph::importGraph	Graph.cpp	/^Graph* Graph::importGraph(string cfilename)$/;"	f	class:Graph	signature:(string cfilename)
Graph::importGraph	Graph.h	/^		static Graph* importGraph(string cfilename);$/;"	p	class:Graph	access:public	signature:(string cfilename)
Graph::n	Graph.h	/^		int n;	\/\/ number of vertices$/;"	m	class:Graph	access:private
Graph::putEdge	Graph.cpp	/^void Graph::putEdge(int v1, int v2, double weight, double capacity)$/;"	f	class:Graph	signature:(int v1, int v2, double weight, double capacity)
Graph::putEdge	Graph.h	/^		void putEdge(int v1, int v2, double weight, double capacity);		$/;"	p	class:Graph	access:public	signature:(int v1, int v2, double weight, double capacity)
Graph::removeEdge	Graph.cpp	/^void Graph::removeEdge(int v1, int v2)$/;"	f	class:Graph	signature:(int v1, int v2)
Graph::removeEdge	Graph.h	/^		void removeEdge(int v1, int v2);$/;"	p	class:Graph	access:public	signature:(int v1, int v2)
Graph::setVertices	Graph.cpp	/^Graph& Graph::setVertices(int n)$/;"	f	class:Graph	signature:(int n)
Graph::setVertices	Graph.h	/^		Graph& setVertices(int n);$/;"	p	class:Graph	access:public	signature:(int n)
Graph::weight	Graph.cpp	/^double Graph::weight(int v1, int v2) const$/;"	f	class:Graph	signature:(int v1, int v2) const
Graph::weight	Graph.h	/^		double weight(int v1, int v2) const;   \/\/return weight of edge (v1, v2)$/;"	p	class:Graph	access:public	signature:(int v1, int v2) const
Graph::~Graph	Graph.cpp	/^Graph::~Graph()$/;"	f	class:Graph	signature:()
Graph::~Graph	Graph.h	/^		virtual ~Graph();$/;"	p	class:Graph	access:public	signature:()
INITSIZE	BulkPool.h	/^		static int INITSIZE = 100;$/;"	m	class:BulkPool	access:private
Kb	BulkPacket.h	/^	Kb = 2,$/;"	e	enum:unit
MAXSIZE	BulkPool.h	/^		static int MAXSIZE = 1000;$/;"	m	class:BulkPool	access:private
Mb	BulkPacket.h	/^	Mb = 3,$/;"	e	enum:unit
Print	BulkGraphNode.cpp	/^int BulkGraphNode::Print()$/;"	f	class:BulkGraphNode	signature:()
Print	BulkGraphNode.h	/^		int Print();$/;"	p	class:BulkGraphNode	access:public	signature:()
_BULKCONTROLNET_H_	BulkControlNet.h	2;"	d
_BULKFILE_H_	BulkFile.h	2;"	d
_BULKGRAPHEDGE_H_	BulkGraphEdge.h	2;"	d
_BULKGRAPHNODE_H_	BulkGraphNode.h	2;"	d
_BULKLINK_H_	BulkLink.h	2;"	d
_BULKPACKETSPOOL_H_	BulkPacketsPool.h	2;"	d
_BULKPACKETS_H_	BulkPackets.h	2;"	d
_BULKPACKET_H_	BulkPacket.h	2;"	d
_GRAPH_H_	Graph.h	2;"	d
_ItoS	BulkFile.cpp	/^string BulkFile::_ItoS(int source)$/;"	f	class:BulkFile	signature:(int source)
_ItoS	BulkFile.h	/^		string _ItoS(int source);$/;"	p	class:BulkFile	access:private	signature:(int source)
_arr	BulkFile.h	/^		map<string, bool> _arr; \/\/Â≠òÊîæÊñá‰ª∂‰ø°ÊÅØÁöÑÊï∞ÁªÑ$/;"	m	class:BulkFile	access:private
_capacity	BulkGraphEdge.h	/^		double _capacity;  \/\/ÈìæË∑ØÂ∏¶ÂÆΩ$/;"	m	class:BulkGraphEdge	access:private
_defaultDirname	BulkFile.h	/^		string _defaultDirname; \/\/ÈªòËÆ§Êñá‰ª∂Â§π$/;"	m	class:BulkFile	access:private
_dfsVisit	Graph.cpp	/^void Graph::_dfsVisit(int uSource, int* visited, int vSink)$/;"	f	class:Graph	signature:(int uSource, int* visited, int vSink)
_dfsVisit	Graph.h	/^		void _dfsVisit(int uSource, int* visited, int vSink); \/\/DFS algorithm$/;"	p	class:Graph	access:private	signature:(int uSource, int* visited, int vSink)
_extractInfo	Graph.cpp	/^size_t Graph::_extractInfo(char* message, Graph* graph)$/;"	f	class:Graph	signature:(char* message, Graph* graph)
_extractInfo	Graph.h	/^		static size_t _extractInfo(char* message, Graph* graph);$/;"	p	class:Graph	access:private	signature:(char* message, Graph* graph)
_fileExisted	BulkFile.cpp	/^bool BulkFile::_fileExisted(string filePath)$/;"	f	class:BulkFile	signature:(string filePath)
_fileExisted	BulkFile.h	/^		bool _fileExisted(string filePath);$/;"	p	class:BulkFile	access:private	signature:(string filePath)
_fileHandle	BulkFile.h	/^		FILE* _fileHandle; \/\/Êñá‰ª∂Âè•ÊüÑ$/;"	m	class:BulkFile	access:private
_fileMkdir	BulkFile.cpp	/^bool BulkFile::_fileMkdir(string dirname)$/;"	f	class:BulkFile	signature:(string dirname)
_fileMkdir	BulkFile.h	/^		bool _fileMkdir(string dirname);$/;"	p	class:BulkFile	access:private	signature:(string dirname)
_getFileFullPath	BulkFile.cpp	/^string BulkFile::_getFileFullPath(pathInfo* fileNameInfo)$/;"	f	class:BulkFile	signature:(pathInfo* fileNameInfo)
_getFileFullPath	BulkFile.h	/^		string _getFileFullPath(pathInfo* fileNameInfo);$/;"	p	class:BulkFile	access:private	signature:(pathInfo* fileNameInfo)
_headQueue	BulkLink.h	/^		queue<BulkPackets>* _headQueue;$/;"	m	class:BulkLink	access:private
_isToTerminal	BulkLink.h	/^		bool _isToTerminal; \/\/_toÊòØÂê¶ÈÄöÂêëÁªàÊ≠¢ÁÇπ$/;"	m	class:BulkLink	access:private
_lSinkList	BulkNetwork.h	/^		slist<GraphNode>* _lSinkList;$/;"	m	class:BulkNetwork	access:private
_lSourceList	BulkNetwork.h	/^		slist<GraphNode>* _lSourceList;$/;"	m	class:BulkNetwork	access:private
_model	BulkPackets.h	/^		BulkPacket* _model;$/;"	m	class:BulkPackets	access:private
_nSink	BulkNetwork.h	/^		int _nSink;   \/\/ÊúâÂá†‰∏™SinkÊµÅÂá∫ÁÇπ$/;"	m	class:BulkNetwork	access:private
_nSource	BulkNetwork.h	/^		int _nSource; \/\/ÊúâÂá†‰∏™SourceÊµÅÂÖ•ÁÇπ$/;"	m	class:BulkNetwork	access:private
_numPacketsHead	BulkLink.h	/^		int _numPacketsHead; \/\/edgeËæπÂ§¥ÁöÑÈòüÂàó$/;"	m	class:BulkLink	access:private
_numPacketsTail	BulkLink.h	/^		int _numPacketsTail; \/\/edgeËæπÂ∞æÁöÑÈòüÂàó$/;"	m	class:BulkLink	access:private
_packets	BulkPool.h	/^		BulkPackets* _packets;$/;"	m	class:BulkPool	access:private
_pathinfo	BulkFile.cpp	/^pathInfo* BulkFile:: _pathinfo(string sDirname, string sBasename, string sExtension)$/;"	f	class:BulkFile	signature:(string sDirname, string sBasename, string sExtension)
_pathinfo	BulkFile.h	/^		pathInfo* _pathinfo(string sDirname, string sBasename, string sExtension = ".dat");$/;"	p	class:BulkFile	access:private	signature:(string sDirname, string sBasename, string sExtension = ”)
_pool	BulkPool.h	/^		slist<BulkPackets>* _pool;$/;"	m	class:BulkPool	access:private
_removeForbiddenChar	BulkFile.cpp	/^string BulkFile::_removeForbiddenChar(string* s)$/;"	f	class:BulkFile	signature:(string* s)
_removeForbiddenChar	BulkFile.h	/^		string _removeForbiddenChar(string* s);$/;"	p	class:BulkFile	access:private	signature:(string* s)
_sFilePath	BulkFile.h	/^		string _sFilePath; \/\/ÂΩìÂâçÊñá‰ª∂ÂÖ®Ë∑ØÂæÑ$/;"	m	class:BulkFile	access:private
_sTempDirname	BulkFile.h	/^		string _sTempDirname; \/\/‰∏¥Êó∂Êñá‰ª∂Â§π$/;"	m	class:BulkFile	access:private
_sTempPath	BulkFile.h	/^		string _sTempPath; \/\/‰∏¥Êó∂Ë∑ØÂæÑ$/;"	m	class:BulkFile	access:private
_setFileName	BulkFile.cpp	/^void BulkFile::_setFileName(pathInfo* fileNameInfo, string sFileName)$/;"	f	class:BulkFile	signature:(pathInfo* fileNameInfo, string sFileName)
_setFileName	BulkFile.h	/^		void _setFileName(pathInfo* fileNameInfo, string sFileName);$/;"	p	class:BulkFile	access:private	signature:(pathInfo* fileNameInfo, string sFileName)
_sinkNode	BulkPackets.h	/^		GraphNode* _sinkNode;$/;"	m	class:BulkPackets	access:private
_sinkNode	BulkSession.h	/^		GraphNode* _sinkNode;$/;"	m	class:BulkSession	access:private
_size	BulkPacket.h	/^		double _size;$/;"	m	class:BulkPacket	access:private
_sourceNode	BulkPackets.h	/^		GraphNode* _sourceNode;$/;"	m	class:BulkPackets	access:private
_sourceNode	BulkSession.h	/^		GraphNode* _sourceNode;$/;"	m	class:BulkSession	access:private
_tailQueue	BulkLink.h	/^		queue<BulkPackets>* _tailQueue;$/;"	m	class:BulkLink	access:private
_topology	BulkNetwork.h	/^		Graph* _topology;$/;"	m	class:BulkNetwork	access:private
_transferPacketsNum	BulkPackets.h	/^		double _transferPacketsNum;$/;"	m	class:BulkPackets	access:private
_type	BulkPacket.h	/^		unit _type;$/;"	m	class:BulkPacket	access:private
_v1	BulkGraphEdge.h	/^		int _v1;		   \/\/node id of the origin$/;"	m	class:BulkGraphEdge	access:private
_v2	BulkGraphEdge.h	/^		int _v2;		   \/\/node id of the end$/;"	m	class:BulkGraphEdge	access:private
_weight	BulkGraphEdge.h	/^		double _weight;	   \/\/ÊùÉÂÄº$/;"	m	class:BulkGraphEdge	access:private
aList	Graph.h	/^		BulkGraphNode* aList; \/\/ adjacency lists$/;"	m	class:Graph	access:private
aPathInfo	BulkFile.h	/^typedef struct aPathInfo$/;"	s
aPathInfo::filename	BulkFile.h	/^	string filename;   \/\/Êñá‰ª∂Âêç(file)$/;"	m	struct:aPathInfo	access:public
aPathInfo::sBasename	BulkFile.h	/^	string sBasename; \/\/Êñá‰ª∂Âü∫Êú¨ÂêçÂ≠ó(file.odf, file.dat)$/;"	m	struct:aPathInfo	access:public
aPathInfo::sDirname	BulkFile.h	/^	string sDirname;  \/\/ÁõÆÂΩïÂêç(\/home\/paul\/BulkFile)$/;"	m	struct:aPathInfo	access:public
aPathInfo::sExtension	BulkFile.h	/^	string sExtension; \/\/Êñá‰ª∂ÂêéÁºÄ(.odf, .dat)$/;"	m	struct:aPathInfo	access:public
addBulkEdge	BulkGraphNode.cpp	/^bool BulkGraphNode::addBulkEdge(BulkGraphEdge* edge)$/;"	f	class:BulkGraphNode	signature:(BulkGraphEdge* edge)
addBulkEdge	BulkGraphNode.h	/^		bool addBulkEdge(BulkGraphEdge* edge);$/;"	p	class:BulkGraphNode	access:public	signature:(BulkGraphEdge* edge)
addFile	BulkFile.cpp	/^void BulkFile::addFile(string sBasename, string sDirname)$/;"	f	class:BulkFile	signature:(string sBasename, string sDirname)
addFile	BulkFile.h	/^		void addFile(string sBasename, string sDirname = NULL);$/;"	p	class:BulkFile	access:public	signature:(string sBasename, string sDirname = NULL)
addNumPacketsHead	BulkLink.cpp	/^bool BulkLink::addNumPacketsHead(bool isAdd, int numPackets)$/;"	f	class:BulkLink	signature:(bool isAdd, int numPackets)
addNumPacketsHead	BulkLink.h	/^		bool addNumPacketsHead(bool isAdd, int numPackets = 1);$/;"	p	class:BulkLink	access:public	signature:(bool isAdd, int numPackets = 1)
addNumPacketsTail	BulkLink.cpp	/^bool BulkLink::addNumPacketsTail(bool isAdd, int numPackets)$/;"	f	class:BulkLink	signature:(bool isAdd, int numPackets)
addNumPacketsTail	BulkLink.h	/^		bool addNumPacketsTail(bool isAdd, int numPackets = 1);$/;"	p	class:BulkLink	access:public	signature:(bool isAdd, int numPackets = 1)
capacity	Graph.cpp	/^double Graph::capacity(int v1, int v2) const$/;"	f	class:Graph	signature:(int v1, int v2) const
capacity	Graph.h	/^		double capacity(int v1, int v2) const; \/\/return capcity of edge (v1, v2)$/;"	p	class:Graph	access:public	signature:(int v1, int v2) const
clearEdges	Graph.cpp	/^void Graph::clearEdges()$/;"	f	class:Graph	signature:()
clearEdges	Graph.h	/^		void clearEdges();$/;"	p	class:Graph	access:public	signature:()
connected	Graph.cpp	/^bool Graph::connected(int v1, int v2)$/;"	f	class:Graph	signature:(int v1, int v2)
connected	Graph.h	/^		bool connected(int v1, int v2);$/;"	p	class:Graph	access:public	signature:(int v1, int v2)
destroy	BulkPool.cpp	/^void BulkPool::destroy()$/;"	f	class:BulkPool	signature:()
destroy	BulkPool.h	/^		void destroy();$/;"	p	class:BulkPool	access:public	signature:()
e	Graph.h	/^		int e;	\/\/ number of edges, one edge counts two times, since later one edge has two opposite direction flow$/;"	m	class:Graph	access:private
filename	BulkFile.h	/^	string filename;   \/\/Êñá‰ª∂Âêç(file)$/;"	m	struct:aPathInfo	access:public
getBulkEdge	BulkGraphNode.cpp	/^BulkGraphEdge* BulkGraphNode::getBulkEdge(BulkGraphEdge* edge) const$/;"	f	class:BulkGraphNode	signature:(BulkGraphEdge* edge) const
getBulkEdge	BulkGraphNode.h	/^		BulkGraphEdge* getBulkEdge(BulkGraphEdge* edge) const;$/;"	p	class:BulkGraphNode	access:public	signature:(BulkGraphEdge* edge) const
getBulkPacketsInfo	BulkPackets.cpp	/^string getBulkPacketsInfo()$/;"	f	signature:()
getBulkPacketsInfo	BulkPackets.h	/^		string getBulkPacketsInfo();$/;"	p	class:BulkPackets	access:public	signature:()
getBulkPacketsSize	BulkPackets.cpp	/^double BulkPackets::getBulkPacketsSize()$/;"	f	class:BulkPackets	signature:()
getBulkPacketsSize	BulkPackets.h	/^		double getBulkPacketsSize();$/;"	p	class:BulkPackets	access:public	signature:()
getCapacity	BulkGraphEdge.cpp	/^double BulkGraphEdge::getCapacity() const$/;"	f	class:BulkGraphEdge	signature:() const
getCapacity	BulkGraphEdge.h	/^		double getCapacity() const;$/;"	p	class:BulkGraphEdge	access:public	signature:() const
getEdges	Graph.cpp	/^int Graph::getEdges() const$/;"	f	class:Graph	signature:() const
getEdges	Graph.h	/^		int getEdges() const;    \/\/return the number of directed edges$/;"	p	class:Graph	access:public	signature:() const
getFilePath	BulkFile.cpp	/^string BulkFile::getFilePath() const$/;"	f	class:BulkFile	signature:() const
getFilePath	BulkFile.h	/^		string getFilePath() const;$/;"	p	class:BulkFile	access:public	signature:() const
getGraphEdgeSink	BulkGraphEdge.cpp	/^int BulkGraphEdge::getGraphEdgeSink() const$/;"	f	class:BulkGraphEdge	signature:() const
getGraphEdgeSink	BulkGraphEdge.h	/^		int getGraphEdgeSink() const;$/;"	p	class:BulkGraphEdge	access:public	signature:() const
getGraphEdgeSource	BulkGraphEdge.cpp	/^int BulkGraphEdge::getGraphEdgeSource() const$/;"	f	class:BulkGraphEdge	signature:() const
getGraphEdgeSource	BulkGraphEdge.h	/^		int getGraphEdgeSource() const;$/;"	p	class:BulkGraphEdge	access:public	signature:() const
getHeadEdge	BulkGraphNode.cpp	/^slist<BulkGraphEdge>* BulkGraphNode::getHeadEdge() const$/;"	f	class:BulkGraphNode	signature:() const
getHeadEdge	BulkGraphNode.h	/^		slist<BulkGraphEdge>* getHeadEdge() const;$/;"	p	class:BulkGraphNode	access:public	signature:() const
getList	Graph.cpp	/^BulkGraphNode* Graph::getList()$/;"	f	class:Graph	signature:()
getList	Graph.h	/^		BulkGraphNode* getList();$/;"	p	class:Graph	access:public	signature:()
getNodeId	BulkGraphNode.cpp	/^int BulkGraphNode::getNodeId() const$/;"	f	class:BulkGraphNode	signature:() const
getNodeId	BulkGraphNode.h	/^		int getNodeId() const;$/;"	p	class:BulkGraphNode	access:public	signature:() const
getNumHeadQueue	BulkGraphNode.cpp	/^int BulkGraphNode::getNumHeadQueue() const$/;"	f	class:BulkGraphNode	signature:() const
getNumHeadQueue	BulkGraphNode.h	/^		int getNumHeadQueue() const;$/;"	p	class:BulkGraphNode	access:public	signature:() const
getNumTailQueue	BulkGraphNode.cpp	/^int BulkGraphNode::getNumTailQueue() const$/;"	f	class:BulkGraphNode	signature:() const
getNumTailQueue	BulkGraphNode.h	/^		int getNumTailQueue() const;$/;"	p	class:BulkGraphNode	access:public	signature:() const
getPacketInfo	BulkPacket.cpp	/^string BulkPacket::getPacketInfo()$/;"	f	class:BulkPacket	signature:()
getPacketInfo	BulkPacket.h	/^		string getPacketInfo();$/;"	p	class:BulkPacket	access:public	signature:()
getPacketSize	BulkPacket.cpp	/^double BulkPacket::getPacketSize() const$/;"	f	class:BulkPacket	signature:() const
getPacketSize	BulkPacket.h	/^		double getPacketSize() const;$/;"	p	class:BulkPacket	access:public	signature:() const
getPacketUnit	BulkPacket.cpp	/^string BulkPacket::getPacketUnit()$/;"	f	class:BulkPacket	signature:()
getPacketUnit	BulkPacket.h	/^		string getPacketUnit();$/;"	p	class:BulkPacket	access:public	signature:()
getPacketsFromPool	BulkPool.h	/^		BulkPackets* getPacketsFromPool();$/;"	p	class:BulkPool	access:public	signature:()
getSinkNodeById	BulkNetwork.cpp	/^slist<GraphNode>* BulkNetwork::getSinkNodeById(int id) const$/;"	f	class:BulkNetwork	signature:(int id) const
getSinkNodeById	BulkNetwork.h	/^		slist<GraphNode>* getSinkNodeById(int id) const;$/;"	p	class:BulkNetwork	access:public	signature:(int id) const
getSourceNodeById	BulkNetwork.cpp	/^slist<GraphNode>* BulkNetwork::getSourceNodeById(int id) const$/;"	f	class:BulkNetwork	signature:(int id) const
getSourceNodeById	BulkNetwork.h	/^		slist<GraphNode>* getSourceNodeById(int id) const;$/;"	p	class:BulkNetwork	access:public	signature:(int id) const
getTailEdge	BulkGraphNode.cpp	/^slist<BulkGraphEdge>* BulkGraphNode::getTailEdge() const$/;"	f	class:BulkGraphNode	signature:() const
getTailEdge	BulkGraphNode.h	/^		slist<BulkGraphEdge>* getTailEdge() const;$/;"	p	class:BulkGraphNode	access:public	signature:() const
getTempDirname	BulkFile.cpp	/^string BulkFile::getTempDirname() const$/;"	f	class:BulkFile	signature:() const
getTempDirname	BulkFile.h	/^		string getTempDirname() const;$/;"	p	class:BulkFile	access:public	signature:() const
getVertices	Graph.cpp	/^int Graph::getVertices() const$/;"	f	class:Graph	signature:() const
getVertices	Graph.h	/^		int getVertices() const; \/\/return the number of nodes$/;"	p	class:Graph	access:public	signature:() const
getWeight	BulkGraphEdge.cpp	/^double BulkGraphEdge::getWeight() const$/;"	f	class:BulkGraphEdge	signature:() const
getWeight	BulkGraphEdge.h	/^		double getWeight() const;$/;"	p	class:BulkGraphEdge	access:public	signature:() const
getlines	BulkFile.cpp	/^void BulkFile::getlines(char** buff, int nSize, string filePath)$/;"	f	class:BulkFile	signature:(char** buff, int nSize, string filePath)
getlines	BulkFile.h	/^		void getlines(char** buff, int nSize, string filePath);$/;"	p	class:BulkFile	access:public	signature:(char** buff, int nSize, string filePath)
headEdge	BulkGraphNode.h	/^		slist<BulkGraphEdge>* headEdge;$/;"	m	class:BulkGraphNode	access:private
id	BulkGraphNode.h	/^		int id;				    \/\/id of the end node of the edge$/;"	m	class:BulkGraphNode	access:private
importGraph	Graph.cpp	/^Graph* Graph::importGraph(string cfilename)$/;"	f	class:Graph	signature:(string cfilename)
importGraph	Graph.h	/^		static Graph* importGraph(string cfilename);$/;"	p	class:Graph	access:public	signature:(string cfilename)
init	BulkFile.cpp	/^void BulkFile::init()$/;"	f	class:BulkFile	signature:()
init	BulkFile.h	/^		void init();$/;"	p	class:BulkFile	access:public	signature:()
init	BulkPool.cpp	/^void BulkPool::init()$/;"	f	class:BulkPool	signature:()
init	BulkPool.h	/^		void init();$/;"	p	class:BulkPool	access:public	signature:()
isTerminal	BulkGraphNode.h	/^		bool isTerminal ; \/\/check the node is Terminal$/;"	m	class:BulkGraphNode	access:private
main	BulkTest.c	/^int main()$/;"	f
n	Graph.h	/^		int n;	\/\/ number of vertices$/;"	m	class:Graph	access:private
numHeadQueue	BulkGraphNode.h	/^		int numHeadQueue;       \/\/number of the head queues$/;"	m	class:BulkGraphNode	access:private
numTailQueue	BulkGraphNode.h	/^		int numTailQueue;       \/\/number of the tail queues$/;"	m	class:BulkGraphNode	access:private
operator =	BulkGraphNode.cpp	/^BulkGraphNode& BulkGraphNode::operator=(const BulkGraphNode &node)$/;"	f	class:BulkGraphNode	signature:(const BulkGraphNode &node)
operator =	BulkGraphNode.h	/^		BulkGraphNode& operator = (const BulkGraphNode &node);$/;"	p	class:BulkGraphNode	access:public	signature:(const BulkGraphNode &node)
operator =	BulkPackets.cpp	/^BulkPackets& BulkPackets::operator=(const BulkPackets& bulkPackets)$/;"	f	class:BulkPackets	signature:(const BulkPackets& bulkPackets)
operator =	BulkPackets.h	/^		BulkPackets& operator=(BulkPackets& bulkPackets);$/;"	p	class:BulkPackets	access:public	signature:(BulkPackets& bulkPackets)
operator ==	BulkGraphEdge.cpp	/^bool BulkGraphEdge::operator == (const BulkGraphEdge& edge)$/;"	f	class:BulkGraphEdge	signature:(const BulkGraphEdge& edge)
operator ==	BulkGraphEdge.h	/^		bool operator == (const BulkGraphEdge& edge);$/;"	p	class:BulkGraphEdge	access:public	signature:(const BulkGraphEdge& edge)
operator ==	BulkGraphNode.cpp	/^bool BulkGraphNode::operator == (const BulkGraphNode& node)$/;"	f	class:BulkGraphNode	signature:(const BulkGraphNode& node)
operator ==	BulkGraphNode.h	/^		bool operator == (const BulkGraphNode& node);$/;"	p	class:BulkGraphNode	access:public	signature:(const BulkGraphNode& node)
pathInfo	BulkFile.h	/^}pathInfo;$/;"	t	typeref:struct:aPathInfo
placePacketsToPool	BulkPool.h	/^		void placePacketsToPool(BulkPackets* packets);$/;"	p	class:BulkPool	access:public	signature:(BulkPackets* packets)
putEdge	Graph.cpp	/^void Graph::putEdge(int v1, int v2, double weight, double capacity)$/;"	f	class:Graph	signature:(int v1, int v2, double weight, double capacity)
putEdge	Graph.h	/^		void putEdge(int v1, int v2, double weight, double capacity);		$/;"	p	class:Graph	access:public	signature:(int v1, int v2, double weight, double capacity)
removeBulkEdge	BulkGraphNode.cpp	/^bool BulkGraphNode::removeBulkEdge(BulkGraphEdge* edge)$/;"	f	class:BulkGraphNode	signature:(BulkGraphEdge* edge)
removeBulkEdge	BulkGraphNode.h	/^		bool removeBulkEdge(BulkGraphEdge* edge);$/;"	p	class:BulkGraphNode	access:public	signature:(BulkGraphEdge* edge)
removeEdge	Graph.cpp	/^void Graph::removeEdge(int v1, int v2)$/;"	f	class:Graph	signature:(int v1, int v2)
removeEdge	Graph.h	/^		void removeEdge(int v1, int v2);$/;"	p	class:Graph	access:public	signature:(int v1, int v2)
sBasename	BulkFile.h	/^	string sBasename; \/\/Êñá‰ª∂Âü∫Êú¨ÂêçÂ≠ó(file.odf, file.dat)$/;"	m	struct:aPathInfo	access:public
sDirname	BulkFile.h	/^	string sDirname;  \/\/ÁõÆÂΩïÂêç(\/home\/paul\/BulkFile)$/;"	m	struct:aPathInfo	access:public
sExtension	BulkFile.h	/^	string sExtension; \/\/Êñá‰ª∂ÂêéÁºÄ(.odf, .dat)$/;"	m	struct:aPathInfo	access:public
setCapacity	BulkGraphEdge.cpp	/^BulkGraphEdge& BulkGraphEdge::setCapacity(double capacity)$/;"	f	class:BulkGraphEdge	signature:(double capacity)
setCapacity	BulkGraphEdge.h	/^		BulkGraphEdge& setCapacity(double capacity);$/;"	p	class:BulkGraphEdge	access:public	signature:(double capacity)
setId	BulkGraphNode.cpp	/^BulkGraphNode& BulkGraphNode::setId(int id)$/;"	f	class:BulkGraphNode	signature:(int id)
setId	BulkGraphNode.h	/^		BulkGraphNode& setId(int id);$/;"	p	class:BulkGraphNode	access:public	signature:(int id)
setPacketSize	BulkPacket.cpp	/^BulkPacket&BulkPacket::setPacketSize(double size)$/;"	f	class:BulkPacket	signature:(double size)
setPacketSize	BulkPacket.h	/^		BulkPacket& setPacketSize(double size);$/;"	p	class:BulkPacket	access:public	signature:(double size)
setPacketType	BulkPacket.cpp	/^BulkPacket&BulkPacket::setPacketType(unit type)$/;"	f	class:BulkPacket	signature:(unit type)
setPacketType	BulkPacket.h	/^		BulkPacket& setPacketType(unit type);$/;"	p	class:BulkPacket	access:public	signature:(unit type)
setSinkNode	BulkPackets.cpp	/^BulkPackets& BulkPackets::setSinkNode(GraphNode* sink)$/;"	f	class:BulkPackets	signature:(GraphNode* sink)
setSinkNode	BulkPackets.h	/^		BulkPackets& setSinkNode(GraphNode* sink);$/;"	p	class:BulkPackets	access:public	signature:(GraphNode* sink)
setSinkNodeById	BulkNetwork.cpp	/^BulkNetwork& BulkNetwork::setSinkNodeById(int id)$/;"	f	class:BulkNetwork	signature:(int id)
setSinkNodeById	BulkNetwork.h	/^		BulkNetwork& setSinkNodeById(int id);$/;"	p	class:BulkNetwork	access:public	signature:(int id)
setSourceNode	BulkPackets.cpp	/^BulkPackets& BulkPackets::setSourceNode(GraphNode* source)$/;"	f	class:BulkPackets	signature:(GraphNode* source)
setSourceNode	BulkPackets.h	/^		BulkPackets& setSourceNode(GraphNode* source);$/;"	p	class:BulkPackets	access:public	signature:(GraphNode* source)
setSourceNodeById	BulkNetwork.cpp	/^BulkNetwork& BulkNetwork::setSourceNodeById(int id)$/;"	f	class:BulkNetwork	signature:(int id)
setSourceNodeById	BulkNetwork.h	/^		BulkNetwork& setSourceNodeById(int id);$/;"	p	class:BulkNetwork	access:public	signature:(int id)
setTempDirname	BulkFile.cpp	/^BulkFile& BulkFile::setTempDirname(string tempDir)$/;"	f	class:BulkFile	signature:(string tempDir)
setTempDirname	BulkFile.h	/^		BulkFile& setTempDirname(string tempDir);$/;"	p	class:BulkFile	access:public	signature:(string tempDir)
setTransferPacketsNum	BulkPackets.cpp	/^BulkPackets& BulkPackets::setTransferPacketsNum(double number)$/;"	f	class:BulkPackets	signature:(double number)
setTransferPacketsNum	BulkPackets.h	/^		BulkPackets& setTransferPacketsNum(double number);$/;"	p	class:BulkPackets	access:public	signature:(double number)
setVertices	Graph.cpp	/^Graph& Graph::setVertices(int n)$/;"	f	class:Graph	signature:(int n)
setVertices	Graph.h	/^		Graph& setVertices(int n);$/;"	p	class:Graph	access:public	signature:(int n)
setWeight	BulkGraphEdge.cpp	/^BulkGraphEdge& BulkGraphEdge::setWeight(double weight)$/;"	f	class:BulkGraphEdge	signature:(double weight)
setWeight	BulkGraphEdge.h	/^		BulkGraphEdge& setWeight(double weight);$/;"	p	class:BulkGraphEdge	access:public	signature:(double weight)
std	BulkTest.c	/^using namespace std;$/;"	v
tailEdge	BulkGraphNode.h	/^		slist<BulkGraphEdge>* tailEdge;$/;"	m	class:BulkGraphNode	access:private
unit	BulkPacket.h	/^enum unit{$/;"	g
weight	Graph.cpp	/^double Graph::weight(int v1, int v2) const$/;"	f	class:Graph	signature:(int v1, int v2) const
weight	Graph.h	/^		double weight(int v1, int v2) const;   \/\/return weight of edge (v1, v2)$/;"	p	class:Graph	access:public	signature:(int v1, int v2) const
~BulkGraphEdge	BulkGraphEdge.h	/^		 ~BulkGraphEdge(){}$/;"	f	class:BulkGraphEdge	access:public	signature:()
~BulkGraphNode	BulkGraphNode.h	/^		virtual ~BulkGraphNode()$/;"	f	class:BulkGraphNode	access:public	signature:()
~BulkNetwork	BulkNetwork.h	/^		virtual ~BulkNetwork();$/;"	p	class:BulkNetwork	access:public	signature:()
~BulkPacket	BulkPacket.cpp	/^BulkPacket::~BulkPacket()$/;"	f	class:BulkPacket	signature:()
~BulkPacket	BulkPacket.h	/^		~BulkPacket();$/;"	p	class:BulkPacket	access:public	signature:()
~BulkPackets	BulkPackets.cpp	/^BulkPackets::~BulkPackets()$/;"	f	class:BulkPackets	signature:()
~BulkPackets	BulkPackets.h	/^		~BulkPackets();$/;"	p	class:BulkPackets	access:public	signature:()
~Graph	Graph.cpp	/^Graph::~Graph()$/;"	f	class:Graph	signature:()
~Graph	Graph.h	/^		virtual ~Graph();$/;"	p	class:Graph	access:public	signature:()
